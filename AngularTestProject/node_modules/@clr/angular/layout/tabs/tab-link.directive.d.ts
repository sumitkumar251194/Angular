import { ComponentFactoryResolver, ElementRef, ViewContainerRef } from '@angular/core';
import { IfActiveService } from '../../utils/conditional/if-active.service';
import { TemplateRefContainer } from '../../utils/template-ref/template-ref-container';
import { TabsService } from './providers/tabs.service';
import { AriaService } from './providers/aria.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrTabLink {
    ifActiveService: IfActiveService;
    private id;
    private ariaService;
    el: ElementRef;
    private cfr;
    private viewContainerRef;
    private tabsService;
    tabsId: number;
    private _inOverflow;
    set inOverflow(inOverflow: boolean);
    get inOverflow(): boolean;
    get addLinkClasses(): boolean;
    templateRefContainer: TemplateRefContainer;
    constructor(ifActiveService: IfActiveService, id: number, ariaService: AriaService, el: ElementRef, cfr: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, tabsService: TabsService, tabsId: number);
    get ariaControls(): string;
    get tabLinkId(): string;
    set tabLinkId(id: string);
    activate(): void;
    get active(): boolean;
    get tabindex(): 0 | -1;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrTabLink>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ClrTabLink, "[clrTabLink]", never, {
    "tabLinkId": "id";
    "inOverflow": "clrTabLinkInOverflow";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWxpbmsuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbInRhYi1saW5rLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEVsZW1lbnRSZWYsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElmQWN0aXZlU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL2NvbmRpdGlvbmFsL2lmLWFjdGl2ZS5zZXJ2aWNlJztcbmltcG9ydCB7IFRlbXBsYXRlUmVmQ29udGFpbmVyIH0gZnJvbSAnLi4vLi4vdXRpbHMvdGVtcGxhdGUtcmVmL3RlbXBsYXRlLXJlZi1jb250YWluZXInO1xuaW1wb3J0IHsgVGFic1NlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy90YWJzLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXJpYVNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy9hcmlhLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2xyVGFiTGluayB7XG4gICAgaWZBY3RpdmVTZXJ2aWNlOiBJZkFjdGl2ZVNlcnZpY2U7XG4gICAgcHJpdmF0ZSBpZDtcbiAgICBwcml2YXRlIGFyaWFTZXJ2aWNlO1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgY2ZyO1xuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lclJlZjtcbiAgICBwcml2YXRlIHRhYnNTZXJ2aWNlO1xuICAgIHRhYnNJZDogbnVtYmVyO1xuICAgIHByaXZhdGUgX2luT3ZlcmZsb3c7XG4gICAgc2V0IGluT3ZlcmZsb3coaW5PdmVyZmxvdzogYm9vbGVhbik7XG4gICAgZ2V0IGluT3ZlcmZsb3coKTogYm9vbGVhbjtcbiAgICBnZXQgYWRkTGlua0NsYXNzZXMoKTogYm9vbGVhbjtcbiAgICB0ZW1wbGF0ZVJlZkNvbnRhaW5lcjogVGVtcGxhdGVSZWZDb250YWluZXI7XG4gICAgY29uc3RydWN0b3IoaWZBY3RpdmVTZXJ2aWNlOiBJZkFjdGl2ZVNlcnZpY2UsIGlkOiBudW1iZXIsIGFyaWFTZXJ2aWNlOiBBcmlhU2VydmljZSwgZWw6IEVsZW1lbnRSZWYsIGNmcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLCB0YWJzU2VydmljZTogVGFic1NlcnZpY2UsIHRhYnNJZDogbnVtYmVyKTtcbiAgICBnZXQgYXJpYUNvbnRyb2xzKCk6IHN0cmluZztcbiAgICBnZXQgdGFiTGlua0lkKCk6IHN0cmluZztcbiAgICBzZXQgdGFiTGlua0lkKGlkOiBzdHJpbmcpO1xuICAgIGFjdGl2YXRlKCk6IHZvaWQ7XG4gICAgZ2V0IGFjdGl2ZSgpOiBib29sZWFuO1xuICAgIGdldCB0YWJpbmRleCgpOiAwIHwgLTE7XG59XG4iXX0=